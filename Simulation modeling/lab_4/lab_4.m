% Завдання: Побудувати графіки декількох траєкторій руху тіла, що відповідають 
% декільком значенням початкового кута, визначити кут, що забезпечує максимальну
% дальність польоту при незмінній початковій швидкості. В якості параметрів задається
% кут до горизонту і початкова швидкість,
% відомо, що кінцеве положення тіла має y1 = 0, початком руху вважати точку (0,0).
function lab_4()
g=9.81;
%з градусів в радіани 
angle1 = pi*30/180;
angle2 = pi*45/180;
angle3 = pi*60/180;
v0=10;
%Обрахунок часу польоту для кожного тіла
t1=(v0*sin(angle1) + (v0^2*sin(angle1)^2)^0.5) / g;
t2=(v0*sin(angle2) + (v0^2*sin(angle2)^2)^0.5) / g;
t3=(v0*sin(angle3) + (v0^2*sin(angle3)^2)^0.5) / g;
%розбиття часу польоту для кожного тіла на 
t_1=[0:0.05:t1,t1];
t_2=[0:0.05:t2,t2];
t_3=[0:0.05:t3,t3];
%обрахунок траєкторії польоту тіл 
x1=v0*cos(angle1)*t_1;
y1=v0*sin(angle1)*t_1-0.5*g*t_1.^2;
x2=v0*cos(angle2)*t_2;
y2=v0*sin(angle2)*t_2-0.5*g*t_2.^2;
x3=v0*cos(angle3)*t_3;
y3=v0*sin(angle3)*t_3-0.5*g*t_3.^2;
%вивід траєкторій тіл
hold on
plot(x1,y1,x2,y2,x3,y3);
legend('30 grad','45 grad','60 grad')
end

% Завдання:  Побудувати графіки траєкторій зустрічного руху двох тіл. Два тіла рухаються назустріч один одному, причому початкова точка траєкторії першого 
% тіла є кінцевою точкою траєкторії другого тіла і навпаки, старт тіл відбувається одночасно. Необхідно побудувати траєкторії так, щоб тіла не зіткнулися.
function plot_rocket()
v0 = 50; %вкажемо початкову швидкість тіла №1
x0= 0;%вкажемо початкові координати для тіла №1
y0= 0;
G = 9.8; %стала прискорення вільного падіння 
 
%вкажемо кут для тіла №1 та №2 , та переведемо значення в радіани
angle1 = 60;
a1 = pi * angle1 / 180;
angle2 = 30;
a2 = pi * angle2 / 180;
 
 
%обрахуємо час польоту для тіла №1
t_1 = (v0*sin(a1) + (v0^2*sin(a1)^2 + 2*G*y0)^0.5) / G;
%обрахуємо відстань польоту тіла №1
l = x0 + v0 * cos(a1) * t_1;
 
t1 = [0:0.05:t_1, t_1];
%обрахуємо координати польоту тіла №1
x1 = x0 + v0 * cos(a1) * t1;
y1 = y0 + v0 * sin(a1) * t1 - 0.5 * G * t1.^2;
 
%обрахуємо початкову швидкіть для тіла №2
v1=((l*G)/(2*cos(a2)*sin(a2)))^0.5
%обрахуємо час польоту для тіла №2
t_2 = (v1*sin(a2) + (v1^2*sin(a2)^2 + 2*G*y0)^0.5) / G;
t2 = [0:0.05:t_2, t_2];
%обрахуємо координати польоту тіла №2
x2 = l - v1 * cos(a2) * t2;
y2 = y0 + v1 * sin(a2) * t2 - 0.5 * G * t2.^2;
%виведемо отримані траєкторії
hold on
plot(x1,y1, x2, y2);

% Завдання: побудувати графік зміни кута з часом а(t), що відповідає декільком початковим значенням швидкості, в якості параметрів задається початкова швидкість, відомо, 
% що кінцеве положення тіла y1 = 0, початком руху прийнято рахувати точку (0,0).
 function udin()
g=9.81;
 
a = pi*45/180;
 
v1=5;
v2=10;
v3=15;
%Розрахунок часу польоту кожного тіла
t1=(v1*sin(a) + (v1^2*sin(a)^2)^0.5) / g;
t2=(v2*sin(a) + (v2^2*sin(a)^2)^0.5) / g;
t3=(v3*sin(a) + (v3^2*sin(a)^2)^0.5) / g;
t_1=[0:0.05:t1,t1];
t_2=[0:0.05:t2,t2];
t_3=[0:0.05:t3,t3];
 
%Розрахунок кута польоту
angl1=atan((v1*sin(a)*t_1-0.5*g*t_1.^2)./(v1*cos(a)*t_1))
angl2=atan((v2*sin(a)*t_2-0.5*g*t_2.^2)./(v2*cos(a)*t_2))
angl3=atan((v3*sin(a)*t_3-0.5*g*t_3.^2)./(v3*cos(a)*t_3))
 
%Вивід графіків
hold on
plot(t_1,angl1,t_2,angl2,t_3,angl3);
legend('5','10','15')
end


% Построить графики нескольких траекторий движения тела,
% соответствующих нескольким значениям времени достижения
% цели, и целевую точку. В качестве параметров задаются
% координаты цели (x1,y1), началом движения считать точку (0,0).

function lab_4()
g=9.81;

xt = 3;
yt = 5;
t1 = 4; 
t2 = 5; 
t3 = 6; 

a1 = atan((yt+0.5*g*t1^2)/xt);
v01=(xt/(cos(a1)*t1));
a2 = atan((yt+0.5*g*t2^2)/xt);
v02=(xt/(cos(a2)*t2));

a3 = atan((yt+0.5*g*t3^2)/xt);
v03=(xt/(cos(a3)*t3));


t_1=[0:0.01:t1,t1];
t_2=[0:0.01:t2,t2];
t_3=[0:0.01:t3,t3];

x1=v01*cos(a1)*t_1;
y1=v01*sin(a1)*t_1-0.5*g*t_1.^2;

x2=v02*cos(a2)*t_2;
y2=v02*sin(a2)*t_2-0.5*g*t_2.^2;

x3=v03*cos(a3)*t_3;
y3=v03*sin(a3)*t_3-0.5*g*t_3.^2;

hold off
plot(x1,y1,x2,y2,x3,y3);
hold on
plot(xt,yt,'or');
end



% Завдання: Побудувати графік економічної траєкторії  руху тіла кинутого під кутого під кутом.
% В якості параметрів передаються координати  кінцевої точки руху (х1, у1), початком руху вважати точку із координатами (0,0).
% Траєкторія вважається економною, якщо ціль досягається із  мінімальною швидкістю.

function im_4(x1,y1)
g=9.81;
vv=1000;
tt=0
%цикл для знаходження мінімальної швидкості
for t1 = 10.0: -0.1: 0.0
   a = atan((y1+0.5*g*t1^2)/x1);
   v0=(x1/(cos(a)*t1));
   if (v0<vv)%перевірка на мінімальну швидкість
       vv=v0;
       tt=t1;
   end;
end
%фінайльний розрахунок величин
a = atan((y1+0.5*g*tt^2)/x1);
v0=(x1/(cos(a)*tt));
 
t=[0:0.01:tt,tt];
%розрахунок координат польоту 
x=v0*cos(a)*t;
y=v0*sin(a)*t-0.5*g*t.^2;
%побудова графіка
hold off
plot(x,y);
hold on
plot(x1,y1,'or');
end
